<?php

/**
 * Implements hook_init().
 */
function pollanon_init() {
  drupal_add_css(drupal_get_path('module', 'pollanon') .'/pollanon.css');
  drupal_add_js(drupal_get_path('module', 'pollanon') .'/js/jquery.cookie.min.js');
  drupal_add_js(drupal_get_path('module', 'pollanon') .'/js/pollanon.pack.js');
}


/**
 * Implementation of hook_menu().
 */
function pollanon_menu() {
  $items = array();
  $items['admin/settings/pollanon'] = array(
    'title' => t('Poll Enhancements'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pollanon_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'pollanon.admin.inc',
  );
  $items['pollanon/ajah/%'] = array(
    'title' => '',
    'type' => MENU_CALLBACK,
    'page callback' => '_pollanon_ajah_results',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
  );
  return $items;
}


/**
 * Implements hook_form_alter().
 */
function pollanon_form_alter(&$form, $form_state, $form_id) {
  static $settings_initialized = FALSE;

  if ($form_id == 'poll_view_voting') {
    $node = $form['#node'];

    if (empty($form['#attributes']['class'])) {
      $form['#attributes']['class'] = 'pollanon';
    }
    else {
      $form['#attributes']['class'] .= ' pollanon';
    }

    $results = variable_get('pollanon_use_ajah', FALSE)? '<span class="loading" />' : _pollanon_poll_results($node->nid);
    $form['pollanon-poll-results'] = array(
        '#value' => '<div class="pollanon-poll-results hidden" data-nid="' . $node->nid .  '">' . $results . '</div>'
    );
    $form['pollanonkey'] = array('#type' => 'hidden', '#default_value' => '');
    $form['vote']['#validate'][] = 'pollanon_handle_vote_validate';
    $form['vote']['#submit'][] = 'pollanon_handle_vote_submit';

    if (!$settings_initialized) {
      $settings_initialized = TRUE;
      drupal_add_js(array('pollanon' => array('nid' => $node->nid, 'ajahBase' => base_path() . 'pollanon/ajah/')), 'setting');
    }
  }
}


function pollanon_handle_vote_validate($form, &$form_state) {
  if (!variable_get('pollanon_use_cookie_method', TRUE) ||  //Cookie restrictions disabled?
      empty($form_state['values']['pollanonkey']) ||        //Pollanon key not found
      user_is_logged_in()) {                                //Authenticated users are handled by the poll module
          return;
  }

  if (!_pollanon_validate_request($form_state['values']['pollanonkey'], _pollanon_build_key())) {
     drupal_goto($_GET['q'], array('error' => t('Cookie support required to anonymous voting')));
  }
}


function pollanon_handle_vote_submit($form, &$form_state) {
  global $user;

  if (!variable_get('pollanon_use_cookie_method', TRUE) ||  //Cookie restrictions disabled?
      empty($form_state['values']['pollanonkey']) ||        //Pollanon key not found
      user_is_logged_in()) {                                //Authenticated users are handled by the poll module
          return;
  }

  $ip_address   = ip_address();
  $node         = $form['#node'];
  $choice       = $form_state['values']['choice'];

  //Create distinctive string to replace the real IP address
  $fake_ip_value = "$ip_address#$pollanon_key-" . time();
  _pollanon_modify_poll_vote_record($node->nid, $fake_ip_value, $ip_address);

  $cookie_name = 'pollanon-' . $node->nid;
  //Set flag: User has submitted this form
  setcookie($cookie_name, '1', time()+3600*24*31, '/'); // Expire in 3 months
  //Remove the key cookie
  setcookie('pollanon-submit', '', time() - 99999, '/');
}


function _pollanon_build_key() {
  $user_agent   = $_SERVER['HTTP_USER_AGENT'];
  $user_agent_i = floor(strlen($user_agent)/2);
  $pollanon_key = !empty($user_agent)? substr($user_agent, $user_agent_i, 2) . strlen($user_agent) : '';
  return $pollanon_key;
}


function _pollanon_validate_request($posted_key_value, $builded_key) {
  return ($builded_key == $_COOKIE['pollanon-submit'] &&
          $builded_key == $posted_key_value);
}


function _pollanon_modify_poll_vote_record($nid, $fake_ip_value, $ip_address) {
  db_query("UPDATE {poll_votes} SET hostname = '%s' WHERE nid = %d AND hostname = '%s'", $fake_ip_value, $nid, $ip_address);
}


function _pollanon_remove_poll_vote_record($nid, $ip_address, $choice) {
  db_query("DELETE FROM {poll_votes} WHERE nid = %d AND hostname = '%s'", $nid, $ip_address);
  db_query("UPDATE {poll_choices} SET chvotes = chvotes - 1 WHERE nid = %d AND chorder = %d", $nid, $choice);
}


function _pollanon_poll_results($nid) {
  $node = node_load($nid);
  if ($node && $node->type == 'poll') {
    return poll_view_results($node, FALSE, FALSE, FALSE);
  }
  else {
    return FALSE;
  }
}


function _pollanon_ajah_results($nid) {
  $output = _pollanon_poll_results($nid);
  if (!$output) {
    $output = '<!-- Not found -->';
  }
  echo $output;
  drupal_page_footer();
}
